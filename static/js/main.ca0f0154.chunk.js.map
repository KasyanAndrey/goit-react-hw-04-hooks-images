{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","services/QueryApi.jsx","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","s","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","placeholder","value","onChange","currentTarget","toLowerCase","LoaderSpiner","color","height","width","Loader","timeout","modalRoot","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","onClick","target","ImageGalleryItem","webformatURL","tags","largeImageURL","showModal","setShowModal","toggleModel","prevState","ImageGalleryItemImage","src","alt","Button","ButtonName","ImageGallery","searchQuery","setSearchQuery","images","setImages","currentPage","setCurrentPage","isLoading","setIsLoading","setError","pageSize","axios","get","then","response","data","hits","imagesApi","length","state","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","Container","map","uuidv4","autoClose","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca0f0154.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__27H4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1OILu\",\"Modal\":\"Modal_Modal__2sex0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1MK2X\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3E4W7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__13XRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2FIWU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3Wlao\",\"SearchForm\":\"Searchbar_SearchForm__2_zaR\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3JdkF\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__suBW2\",\"SearchFormInput\":\"Searchbar_SearchFormInput__RKr_f\"};","import { useState } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      toast.error('Enter what you need to find.');\r\n      return;\r\n    }\r\n\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          name=\"searchQuery\"\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport s from './Loader.module.css';\r\n\r\nconst LoaderSpiner = () => (\r\n  <Loader\r\n    type=\"TailSpin\"\r\n    color=\"#3f51b5\"\r\n    height={80}\r\n    width={80}\r\n    className={s.Loader}\r\n    timeout={3000}\r\n  />\r\n);\r\n\r\nexport default LoaderSpiner;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ children, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleOverlayClick}>\r\n      <div className={s.Modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal';\r\n\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ webformatURL, tags, largeImageURL }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModel = () => {\r\n    setShowModal(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li className={s.ImageGalleryItem} onClick={toggleModel}>\r\n        <img\r\n          className={s.ImageGalleryItemImage}\r\n          src={webformatURL}\r\n          alt={tags}\r\n        />\r\n      </li>\r\n      {showModal && (\r\n        <Modal onClose={toggleModel}>\r\n          <img src={largeImageURL} alt={tags} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" onClick={() => onClick()} className={s.Button}>\r\n      <span className={s.ButtonName}>Load more</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './ImageGallery.module.css';\r\n\r\nimport Searchbar from '../Searchbar';\r\nimport imagesApi from '../../services';\r\nimport LoaderSpiner from '../Loader';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport LoadMoreButton from '../Button';\r\n\r\nfunction ImageGallery() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    const fetchImages = () => {\r\n      setIsLoading(true);\r\n\r\n      imagesApi({ searchQuery, currentPage })\r\n        .then(images => {\r\n          if (images.length === 0) {\r\n            setError(true);\r\n            toast.error('Please enter a more correct request!');\r\n\r\n            return;\r\n          }\r\n\r\n          setImages(state => [...state, ...images]);\r\n        })\r\n        .catch(error => setError(error))\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        });\r\n    };\r\n\r\n    fetchImages();\r\n  }, [searchQuery, currentPage]);\r\n\r\n  const handleFormSubmit = query => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1);\r\n    setImages([]);\r\n    setError(error);\r\n  };\r\n\r\n  const handleButtonLoadMore = () => {\r\n    setCurrentPage(state => state + 1);\r\n  };\r\n\r\n  const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n\r\n  return (\r\n    <div className={s.Container}>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {images && (\r\n        <ul className={s.ImageGallery}>\r\n          {images.map(({ webformatURL, largeImageURL, tags }) => (\r\n            <ImageGalleryItem\r\n              key={uuidv4()}\r\n              webformatURL={webformatURL}\r\n              largeImageURL={largeImageURL}\r\n              tags={tags}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {isLoading && <LoaderSpiner />}\r\n      {shouldRenderLoadMoreButton && (\r\n        <LoadMoreButton onClick={handleButtonLoadMore}></LoadMoreButton>\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '20167067-fa9a23327fba47dd7ecb29229';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport default function fetchImages({\r\n  searchQuery = '',\r\n  currentPage = 1,\r\n  pageSize = 12,\r\n}) {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport ImageGallery from './components/ImageGallery';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <ImageGallery />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}